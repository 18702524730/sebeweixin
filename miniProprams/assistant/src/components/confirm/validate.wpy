<template>
	<Tips />
	<view class="validate" wx:if="{{show}}">
		<form class="validateF" @submit="confirm" style="height: {{formH}}">
			<view class="til">
				<text>本人验证</text>
				<view class="close"><image @tap="back" src="/images/confirm/close.png"/></view>
			</view>
			<view class="page__bd form">
				<view class="inputs_wrap">
					<view class="weui-cell weui-cell_input weui-cell_vcode">
						<view class="weui-cell__hd">
							<view class="weui-label">手机号码</view>
						</view>
						<view class="weui-cell__bd">
							<!-- <input class="weui-input" id="phone" @blur="input" value="{{phone}}" type="number" maxlength="11" placeholder="填写手机号"/> -->
							{{phone}}
						</view>
						<view class="weui-cell__ft">
							<VCode @tap.user="code"/>
						</view>
					</view>
					<view class="weui-cell weui-cell_input weui-cell_vcode">
						<view class="weui-cell__hd">
							<view class="weui-label">验证码</view>
						</view>
						<view class="weui-cell__bd">
							<input class="weui-input" type="digit" cursor-spacing="60" name="code" confirm-type="done" maxlength="6" placeholder="输入验证码"  @input="autoJudge"/>
						</view>
					</view>
				</view>
				<view class="tips">
					温馨提示：未注册拾贝网账号的手机号，验证时将自动注册，且代表您已同意<text @tap.stop="showRegAgreement">《拾贝网用户注册协议》</text>
				</view>
			</view>
			<view class="validate-btn-area">
				<button form-type="submit">验证并支付</button>
			</view>
		</form>
	</view>
</template>
<script>
	import wepy from 'wepy';
	import auth from '../../api/auth';
	import confirm from '../../api/confirm';
	import base from '../../mixins/base';
	import input from '../../mixins/input';
	import FormTips from '../../components/weui/tips';
	import VCode from '../../components/weui/vcode';
	import Tips from '../../utils/Tips';
	import WxUtils from '../../utils/WxUtils';
	export default class Validate extends wepy.component {
		def = {
			init: false,
			loginMassage: {},
			formH: '0'
		};
		data = {...this.def};
		props = {
			phone: {
				type: String,
				default: ''
			},
			show: {
				type: Boolean,
				default: false
			},
			type: {
				type: String,
				default: 'empty'
			},
			message: {default: '没有相关信息'}
		};
		
		methods = {
			autoJudge(e){
				if (e.detail.cursor === 6) {
					wepy.hideKeyboard();
				}
			},
			showRegAgreement() {
				this.$emit('showRegAgreement');
			},
			back() {
				this.$emit('back');
			},
			async confirm({detail}) {
				// 覆盖对象
				Object.assign(this.loginMassage, detail.value);
				if (!this.isValid()) {
					return;
				}
				try {
					let createR;
					try {
						let data = {
							asistantOrderCustomerId: 25,
							resourceType: 2,
							asistantPhoneCode: this.loginMassage.code
						}
						createR = await confirm.createOrder(data);
						Event.emit(Event.SERVICE_AGREEMENT_UPDATE, createR.order_sn);
						this.$emit('showAgreement');
					} catch (err) {
						if (err.serverCode == 10501) {
							createR = err.serverData.login_code;
							Tips.loaded();
							await Tips.modal('提示');
						} else {
							//this.tips(err.message);
							return;
						}
					}
					await auth.setConfig('login_code', createR);
					await auth.removeConfig('shop_id');
					this.$redirect('shops');
				} catch (e) {
					this.tips(e.message);
				} finally {
					this.loaded();
				}
			},
			async code() {
				/* if (!this.isPhoneValid(this.input.phone)) {
					return;
				} */
				// 发送验证码
				try {
					await auth.sms(this.phone);
					this.$invoke('VCode', 'cd', 60);
					Tips.success('验证码已发送');
				} catch (err) {
					if (err.serverCode == 10005) {
						console.debug('请求验证码太频繁');
						this.$invoke('VCode', 'cd', 60);
					}
					this.tips(err.message);
				} finally {
					this.loaded();
				}
			}
		};
		watch = {
			show(){
				console.log(222222222)
				this.formH = this.show ? '438rpx' : '0';
				
				console.log(this.formH)
				console.log(this.phone)
				this.$apply();
			}
		}

		/**
		 * 校验表单提交
		 */
		isValid(phone) {
			/* if (!this.isPhoneValid(phone)) {
				return false;
			} */
			if (this.isEmpty(this.loginMassage.code)) {
				this.tips('请输入验证码');
				return false;
			}
			return true;
		}
		/**
		 * 校验电话号码
		 */
		isPhoneValid(phone) {
			if (this.isEmpty(phone)) {
				this.tips('请输入手机号码');
				return false;
			}
			const reg = /^1\d{10}$/;
			if (!reg.test(phone)) {
				this.tips('电话号码格式错误');
				return false;
			}
			return true;
		}
		mixins = [input, base];
		components = {
			Tips: FormTips,
			VCode: VCode
			// Copyright: Copyright
		};
	}
</script>

<style lang="scss">
	@import "../../styles/variable";
	.validate{
		position: fixed;top: 0;left: 0;width: 100%;height: 100%;background: rgba(0,0,0,0.50);z-index: 3;
		.validateF{width: 100%;height: 0;padding-bottom: 94rpx;position: absolute;bottom:0;background-color: #FFF;border-top-left-radius:10rpx;border-top-right-radius:10rpx; transition: height 0.2s ease-out;
			.til{
				height: 42rpx;padding:40rpx 30rpx 30rpx;display: flex;
				text{height: 42rpx;color: #333;font-size:$text-lg;flex: 1;}
				.close{
					flex: 1;text-align: right;
					image{width: 24rpx;height: 24rpx;}
				}
			}
			.form{
				text,view{font-family: $font-family;}
			}
			.page__bd{
				.inputs_wrap{
					padding:0 30rpx;
					.weui-cell_vcode{
						border: $border;height: 90rpx;border-radius: 6rpx;margin-bottom: 20rpx;
						.weui-cell__hd{
							font-size:$text-lg;
							.weui-label{font-size:$text-lg;color: #333333;}
						}
						.weui-cell__bd{
							font-size:$text-lg;
							.weui-label{color: #CCCCCC;}
						}
						.weui-vcode-btn{font-size:$text-lg;color: #09BB07;border-left:0;}
					}
					.weui-cell:before{border-top: 0;}
				}
				.tips{
					font-size: $text-xs;color: #888888;line-height: 33rpx;padding:0 30rpx;
					text{color: #2F80F6;font-size: $text-xs;}
				}
			}
			.validate-btn-area{
				position: fixed;bottom: 0;left: 0;width: 100%;z-index: 4;
				button{background-color: #2F80F6;height: 94rpx;line-height:94rpx;font-size: $text-xxl;border-radius: 0;color: #fff;box-shadow: 0 8px 16px 0 rgba(0,89,135,0.06);}
				button::after{border:0;}
			}
		}
	}
	.brand{
		padding-top: 60rpx;
		padding-bottom: 60rpx;

		.logo{
			width: 100px;
			height: 100px;
		}

		text{
			margin-top: 15rpx;
			font-size: $text-form;
		}
	}
</style>
