<template>
  <view class="modal-mask_mask_success" @tap="hideModal" catchtouchmove="preventTouchMove" wx:if="{{ myModal.showModal }}"></view>
    <view class="mymodal-dialog_success" wx:if="{{ myModal.showModal }}">
      <view class="modal-title">
        <image class="success" src="../..//images/icons/success_icon.png" class="img"></image>
        <text class="name">{{ myModal.title }}</text>
      </view>
      <view class="modal-info">{{ myModal.info }}</view>
      <view class="modal-content">
        <rich-text nodes="{{ myModal.content }}" class="content"></rich-text>
      </view>
      <view class="modal-footer">
        <view style="color: {{ myModal.cancelColor }}" class="btn-cancel" @tap="hideModal" data-status="cancel">{{ myModal.cancelText }}</view>
        <view style="color: {{ myModal.disabled ? myModal.disabledColor : myModal.confirmColor }}" class="btn-confirm" @tap="confirm" data-status="confirm">{{ myModal.confirmText }}</view>
      </view>
    </view>
  </view>

</template>

<script>
  import wepy from 'wepy'
  export default class modal extends wepy.component {
    events = {
      // 接收父级广播过来的参数
      'changeModal': (v) => {
        this.myModal = v;
      }
    }

    props = {
      myModal: {
        type: Object,
        default: {
          showModal: false,
          title: '标题',
          info: '说明',
          content: [],
          showCancel: true,
          disabled: true, //默认两个按钮都不选中，确实按钮禁用
          disabledColor: '#ccc',
          cancelText: '取消',
          cancelColor: '#000000',
          confirmText: '确定',
          confirmColor: '#3CC51F'
        },
        twoWay: true
      }
    };

    data = {
      selectData: {}  //选择的数据
    }

    async onLoad () { // 在Page和Component共用的生命周期函数
      this.selectData = this.myModal.content[0];
    }

    reset(){
    	this.myModal.showModal = false;
    }

    methods = {
      //对话框取消按钮点击事件
      hideModal () {
        this.$emit('hideModal');
        this.reset();
      },
      // 成功回调
      confirm() {
      	if (this.myModal.disabled) {return}
        this.$emit('confirm', this.selectData);
      	this.reset();
      },
      // 选择操作类型
      selectThisFn(index) {
        this.myModal.content.forEach( (item) => {
          item.active = false;
        })
        this.myModal.content[index].active = true;
        this.myModal.disabled = false;
        this.selectData = this.myModal.content[index];
      }
    }
    watch = {
    	'myModal.confirmColor'(){

    	}
    }


  }
</script>

<style lang="scss">
  @import "../../styles/variable";
  .modal-mask_mask_success {
    width: 100%;
    height: 100%;
    position: fixed;
    top: 0;
    left: 0;
    background: rgba(0, 0, 0, 0.5);
    overflow: hidden;
    z-index: 9000;
    color: #fff;
  }
  .mymodal-dialog_success {
    width: 600rpx;
    min-height: 400rpx;
    position: fixed;
    top: 50%;
    left: 50%;
    margin-left: -300rpx;
    transform: translateY(-50%);
    z-index: 9001;
    background: #fff;
    border-radius: 10rpx;
    .modal-title {
      padding-top: 50rpx; text-align: center; height:44rpx; line-height: 44rpx;
      .img {width:44rpx; height:44rpx; margin-right:10rpx; vertical-align: middle;}
      .name {font-size:36rpx; color: #000; vertical-align: middle; height:44rpx; line-height:44rpx;}
    }
    .modal-info {
      font-family: PingFangSC-Regular;
      font-size: 30rpx;
      color: #666666;
      text-align: center;
      margin: 18rpx auto 30rpx auto;
    }
    .modal-content {
      padding: 50rpx 30rpx 70rpx 30rpx;
      .content {font-size: 32rpx; width:100%;}
    }
    .modal-footer {
      display: flex;
      flex-direction: row;
      height: 100rpx;
      border-top: 1px solid #E5E5E5;
      font-size: 34rpx;
      line-height: 100rpx;
      .btn-cancel {
        width: 50%;
        text-align: center;
        font-size: 36rpx;
        border-right: 1px solid #E5E5E5;
      }
      .btn-confirm {
        width: 50%;
        font-size: 36rpx;
        text-align: center;
      }
    }
  }







</style>
